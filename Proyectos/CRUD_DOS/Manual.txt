-->virtualenv crud2_0

-->pip install Django==2.2.7

-->Me regreso y creo el proyecto.

-->django-admin startproject biblioteca   #crea el proyecto

-->Crear la primera aplicación
    -->estando en la carpeta apps.

-->django-admin startapp libro

-->registrar la aplicacon en settings.

-->Creando los modelos.
    -->

-->Creando la migración. 
    -->en donde esta el manage.
    -->python manage.py makemigrations
    -->python manage.py migrate

-->Levantar el servidor.
    -->python manage.py runserver    -->opcional    python manage.py runserver 0.0.0.0:8006

-->Crear un super usuario.
    -->python manage.py createsuperuser

-->Instalar libreria psycopg2
    -->pip install psycopg2

-->Para instalar con mysql.
    -->https://www.youtube.com/watch?v=47H3OHdTkLw&list=PLMbRqrU_kvbTGg_oUKXyWi63Mo9Yoot9K&index=7

-->configuración. 

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'biblioteca',
        'USER': 'rodrigo',
        'PASSWORD': 'rorro13',
        'HOST': 'localhost',
        'PORT': 5432
    }
}

-->Cambios de un campo se tienen que hacer los dos procesos de las migraciones para que se puedan Reflejar. -->OJO

############################################

MANEJO DEL SHELL DE DJANGO

--> python manage.py shell

-->from apps.libro.models import Autor  #importar el modelo a consultar

#para Crear

--> Autor.objects.create(nombre="Carlos", apellidos = "Olmos" , nacionalidad="Eu", descripcion="demo de carlos")


#Consuta todos. 
--> Autor.objects.all()

-->Autor.objects.filter(nacionalidad="Mexicana")

-->Autor.objects.get(id=3)  #un solo autor

-->Autor.objects.filter(nacionalidad="Mexicana", id=2)


#####################################33
LIBRERIA IMPORT, EXPORT

pip install django-import-export


#################################
django-ckeditor

pip install django-ckeditor


#################################3
Plantilla.

https://github.com/BlackrockDigital/startbootstrap-clean-blog




##############################################33
-->Preparando el Proyecto para subir a heroku
-->pip install gunicorn

-->El la principal de django crear el archivo Procfile

--> poner -->  web: gunicorn django blog.wsgi

-->Configurar librerias y configurar todos.

-->creando la migración de librerias.
    -->pip freeze > requirements.txt




###################################
CONFIGURAR EL SISTEMA EN HEROKU.

-->Crear carpeta settings.
-->Crear archivo __init__.py
-->Se reparten en partes el archivo settings
-->configurar el archivo wsgi.pi la ruta de local o public 
-->manage tambien

--> se agrega local al final en los dos   --> os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django_blog.settings.local')


-->Configurar Heroku

-->ya tengo cuenta

-->instalar The Heroku CLI

-->En una terminal poner > heroku --version 

--> heroku login

-->Crear aplicacion desde la terminal
    -->desde la terminal que esta conectada por el login
    -->heroku create   -->sin guiones

C:\Users\rodrigo.villanueva.c\Documents\PYTHON\CMDER
λ heroku create
Creating app... done, ⬢ afternoon-hamlet-82252
https://afternoon-hamlet-82252.herokuapp.com/ | https://git.heroku.com/afternoon-hamlet-82252.git

